<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	   xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:mvc="http://www.springframework.org/schema/mvc"
	   xmlns:util="http://www.springframework.org/schema/util" xmlns:cache="http://www.springframework.org/schema/cache"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd">
	<context:property-placeholder location="classpath:resources.properties" />

	<mvc:annotation-driven>
		<mvc:message-converters register-defaults="true">
			<bean class="org.springframework.http.converter.StringHttpMessageConverter">
				<property name="supportedMediaTypes" value="text/plain;charset=UTF-8" />
			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven>
	<!-- 扫描注解Bean -->
	<!-- <context:component-scan base-package="com.ifm.servplat.pwp.controller">
		<context:exclude-filter expression="org.springframework.stereotype.Controller"
		type="annotation"/> </context:component-scan> -->
	<context:annotation-config/>
	<!-- 扫描注解Bean -->
	<context:component-scan base-package="base" />


	<!-- 开启AOP监听 只对当前配置文件有效 -->
	<aop:aspectj-autoproxy expose-proxy="true" />

	<!--&lt;!&ndash; 定时任务begin &ndash;&gt;-->
	<!--<bean id="quartzJob" class="base.util.timetask.CouponOrderStatusJob"/>-->
	<!--&lt;!&ndash; 定义调用对象和调用对象的方法 &ndash;&gt;-->
	<!--<bean id="jobtask" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">-->
		<!--&lt;!&ndash; 调用的类 &ndash;&gt;-->
		<!--<property name="targetObject">-->
			<!--<ref bean="quartzJob"></ref>-->
		<!--</property>-->
		<!--&lt;!&ndash; 调用类中的方法 &ndash;&gt;-->
		<!--<property name="targetMethod">-->
			<!--<value>execute</value>-->
		<!--</property>-->
	<!--</bean>-->
	<!--&lt;!&ndash; 定义触发时间 &ndash;&gt;-->
	<!--<bean id="doTime" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">-->
		<!--<property name="jobDetail">-->
			<!--<ref bean="jobtask"></ref>-->
		<!--</property>-->
		<!--<property name="cronExpression">-->
			<!--<value>0 0 */4 * * ?</value>-->
		<!--</property>-->
	<!--</bean>-->
	<!--<bean id="startQuertz" lazy-init="false" autowire="no" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">-->
		<!--<property name="triggers">-->
			<!--<list>-->
				<!--<ref bean="doTime"></ref>-->
			<!--</list>-->
		<!--</property>-->
	<!--</bean>-->

	<!--&lt;!&ndash;MQConfig Bean&ndash;&gt;-->
	<!--<bean id="mqConfBean" class="base.conf.MqConfig">-->
		<!--<constructor-arg>-->
			<!--<value>config/mq.properties</value>-->
		<!--</constructor-arg>-->
	<!--</bean>-->

	<!--&lt;!&ndash; 异常处理 &ndash;&gt;-->
	<!--&lt;!&ndash;<bean id="logServiceBean" class="base.service.impl.LogServiceImpl"/>&ndash;&gt;-->
	<!--<bean id="exceptionHandler" class="base.util.spring.ExceptionHandler">-->
		<!--&lt;!&ndash;<property name="logService" ref="logServiceBean">&ndash;&gt;-->
		<!--&lt;!&ndash;</property>&ndash;&gt;-->
	<!--</bean>-->

	<!-- 定时任务结束 -->
	<!-- 数据源 -->
	<bean id="dataSource"
		  class="org.apache.commons.dbcp2.BasicDataSource">
		<property name="driverClassName" value="${connection.driverClassName}"></property>
		<property name="password" value="${connection.password}"></property>
		<property name="username" value="${connection.username}"></property>
		<property name="url" value="${connection.url}"></property>
		<property name="initialSize" value="5"></property>
		<property name="maxIdle" value="50"></property>
		<property name="minIdle" value="10"></property>
		<property name="maxWaitMillis" value="30000"></property>
		<property name="removeAbandonedTimeout" value="30000"></property>
		<property name="timeBetweenEvictionRunsMillis" value="30000"></property>
		<property name="minEvictableIdleTimeMillis" value="60000"></property>
	</bean>
	<!-- 创建SqlSessionFactory和指定mybatis配置文件路径，同时指定数据源 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="configLocation" value="classpath:MyBatis-Configuration.xml"></property>
		<property name="dataSource" ref="dataSource" />
	</bean>
	<!-- 配置用mybatis生成Mapper文件路径 -->
	<bean id="mapperScanner" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="base.dao" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
	</bean>
	<!--事务管理器配置 -->
	<bean id="transactionManager"
		  class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<!-- 事务注解驱动，标注@Transactional的类和方法将具有事务性 -->
	<tx:annotation-driven transaction-manager="transactionManager" />
	<!-- 支持上传文件  -->
	<!-- <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"/>  -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="defaultEncoding" value="utf-8"></property>
		<property name="maxUploadSize" value="10485760000"></property>
		<property name="maxInMemorySize" value="40960"></property>
	</bean>
	<!-- redis  config  start -->
	<!-- 配置JedisPoolConfig实例 -->
	<cache:annotation-driven cache-manager="redisCacheManager" />
	<bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<property name="maxIdle" value="${redis.maxIdle}" />
		<property name="MaxActive" value="${redis.maxActive}" />
		<property name="maxWait" value="${redis.maxWait}" />
		<property name="testOnBorrow" value="${redis.testOnBorrow}" />
	</bean>

	<!-- 配置JedisConnectionFactory -->
	<bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
		<property name="hostName" value="${redis.host}"/>
		<property name="port" value="${redis.port}"/>
		<property name="password" value="${redis.pass}"/>
		<property name="database" value="${redis.dbIndex}"/>
		<property name="poolConfig" ref="poolConfig"/>
	</bean>

	<!-- 配置RedisTemplate -->
	<bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
		<property name="connectionFactory" ref="jedisConnectionFactory"/>
	</bean>

	<!-- 配置RedisCacheManager -->
	<bean id="redisCacheManager" class="org.springframework.data.redis.cache.RedisCacheManager">
		<constructor-arg name="template" ref="redisTemplate" />
		<property name="defaultExpiration" value="${redis.expiration}"/>
	</bean>

	<!-- 配置RedisCacheConfig -->
	<bean id="redisCacheConfig" class="base.RedisCacheConfig">
		<constructor-arg ref="jedisConnectionFactory" />
		<constructor-arg ref="redisTemplate" />
		<constructor-arg ref="redisCacheManager" />
	</bean>
	<!-- redis  config  end -->

	<!--事务配置-->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="*" propagation="REQUIRED" />
		</tx:attributes>
	</tx:advice>
	<aop:config expose-proxy="true" proxy-target-class="true">
		<!-- 只对业务逻辑层实施事务 -->
		<aop:pointcut id="txPointcut"
					  expression="execution(* base.service..*+.*(..))" />
		<aop:advisor id="txAdvisor" advice-ref="txAdvice"
					 pointcut-ref="txPointcut" />

	</aop:config>
</beans>